name: 'Build and Push Kolla Images'

on:
  push:
    branches:
      - qumulus/*
    paths-ignore:
      - '**.md'

permissions:
  contents: read
  id-token: write

concurrency:
  group: '${{ github.workflow }} @ ${{ github.repository }} @ ${{ github.base_ref || github.ref_name }}'
  cancel-in-progress: false

jobs:
  packer:
    runs-on:
      group: dev
    environment:
      name: development

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set GITHUB Environment Variables
        run: |
          echo "GITHUB_ACTIONS_BRANCH=${{ github.base_ref || github.ref_name }}" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS_WORKFLOW_ID=${{ github.run_id }}" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS_WORKFLOW_ATEMPT=${{ github.run_attempt }}" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS_WORKFLOW_RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS_AUTHOR=${{ github.actor }}" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
          VERSION_FULL=`echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}|cut -d "/" -f 2`
          OPENSTACK_VERSION=`echo ${VERSION_FULL}|cut -d "-" -f 1`
          VERSION=`echo ${VERSION_FULL}|cut -d "-" -f 2`
          echo "OPENSTACK_VERSION=$OPENSTACK_VERSION"  >> $GITHUB_ENV
          echo "VERSION=$VERSION"  >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV
          echo "HARBOR_USERNAME=robot\$github" >> $GITHUB_ENV
          echo "HARBOR_ADDR=repo.qumulus.dev" >> $GITHUB_ENV

      - name: Login to Harbor Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.HARBOR_ADDR }}
          username: ${{ env.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN_DEV }}

      - name: Install Kolla
        run: |
          #sudo apt update
          #sudo apt install -y bash python3 python3-pip git python3-dev libffi-dev gcc libssl-dev python3-venv
          #python3 -m venv kolla
          #source kolla/bin/activate
          #pip install -U pip
          #pip install git+https://github.com/QumulusTechnology/kolla@qumulus/${VERSION}

      - name: Create kolla-build.conf
        run: |
          CWD="$(pwd)"
          sudo mkdir -p /etc/kolla
          sudo bash -c "cat << EOF > /etc/kolla/kolla-build.conf
          [DEFAULT]
          base = ubuntu
          base_tag = 22.04
          namespace = ${OPENSTACK_VERSION}
          push = false
          registry = ${HARBOR_ADDR}/kolla
          install_type = source
          tag = latest
          template_override = /etc/kolla/template-overrides.j2
          openstack_release = ${OPENSTACK_VERSION}
          docker_healthchecks = true
          [${REPO_NAME}-base]
          type = local
          location = ${CWD}
          EOF"

      - name: Create template-overrides.j2
        run: |
          sudo bash -c 'cat << EOF > /etc/kolla/template-overrides.j2
          {% extends parent_template %}
          {% block nova_base_header %}
          {% endblock %}
          EOF'

      - name: Build docker images
        run: |
          # source kolla/bin/activate
          # kolla-build  ${REPO_NAME}

      - name: Tag docker images
        run: |
          docker build . -t ${HARBOR_ADDR}/kolla/${OPENSTACK_VERSION}/${REPO_NAME}:latest
          timestamp=$(date +%Y%m%d%H%M%S)
          for i in $(docker images --format '{{.Repository}}' | grep "/${OPENSTACK_VERSION}/"); do
            docker tag ${i}:latest ${HARBOR_ADDR}/kolla/${OPENSTACK_VERSION}/${REPO_NAME}:${timestamp}
            docker image push --all-tags ${i}
          done

      - name: Set GITHUB Environment Variables
        run: |
          echo "HARBOR_ADDR=repo.qumulus.io" >> $GITHUB_ENV

      - name: Login to Harbor Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.HARBOR_ADDR }}
          username: ${{ env.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN_PROD }}
